{
 "Resources": {
  "ServiceProviderVPC51C4E3DE": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.5.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/Resource"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1Subnet3EBC7C01": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/Subnet"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1RouteTable33C47A69": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/RouteTable"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1RouteTableAssociationC4B7CA7B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1RouteTable33C47A69"
    },
    "SubnetId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1Subnet3EBC7C01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1DefaultRoute5B6E2271": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1RouteTable33C47A69"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceProviderVPCIGWB46F48BA"
    }
   },
   "DependsOn": [
    "ServiceProviderVPCVPCGW7A0CC48E"
   ],
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/DefaultRoute"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1EIP36790F46": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/EIP"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet1NATGateway8FCCF863": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1Subnet3EBC7C01"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "ServiceProviderVPCpublicsubnetSubnet1EIP36790F46",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1"
     }
    ]
   },
   "DependsOn": [
    "ServiceProviderVPCpublicsubnetSubnet1DefaultRoute5B6E2271",
    "ServiceProviderVPCpublicsubnetSubnet1RouteTableAssociationC4B7CA7B"
   ],
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet1/NATGateway"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet2Subnet4B0CBDB2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2/Subnet"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet2RouteTable7CEBDA73": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2/RouteTable"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet2RouteTableAssociationFC68747A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet2RouteTable7CEBDA73"
    },
    "SubnetId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet2Subnet4B0CBDB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "ServiceProviderVPCpublicsubnetSubnet2DefaultRoute617F3A34": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet2RouteTable7CEBDA73"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceProviderVPCIGWB46F48BA"
    }
   },
   "DependsOn": [
    "ServiceProviderVPCVPCGW7A0CC48E"
   ],
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/public-subnetSubnet2/DefaultRoute"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet1Subnet3BE3EE80": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1/Subnet"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet1RouteTable5390166E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1/RouteTable"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet1RouteTableAssociationBF882A11": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet1RouteTable5390166E"
    },
    "SubnetId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet1Subnet3BE3EE80"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1/RouteTableAssociation"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet1DefaultRouteBA070DEE": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet1RouteTable5390166E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1NATGateway8FCCF863"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet1/DefaultRoute"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet2Subnet3125EE01": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2/Subnet"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet2RouteTableFBAE0525": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2/RouteTable"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet2RouteTableAssociation1FBFAEBB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet2RouteTableFBAE0525"
    },
    "SubnetId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet2Subnet3125EE01"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2/RouteTableAssociation"
   }
  },
  "ServiceProviderVPCprivatesubnetSubnet2DefaultRoute5CDC9242": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceProviderVPCprivatesubnetSubnet2RouteTableFBAE0525"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ServiceProviderVPCpublicsubnetSubnet1NATGateway8FCCF863"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/private-subnetSubnet2/DefaultRoute"
   }
  },
  "ServiceProviderVPCIGWB46F48BA": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/IGW"
   }
  },
  "ServiceProviderVPCVPCGW7A0CC48E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    },
    "InternetGatewayId": {
     "Ref": "ServiceProviderVPCIGWB46F48BA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/VPCGW"
   }
  },
  "ServiceProviderVPCRestrictDefaultSecurityGroupCustomResource2290D7D2": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "ServiceProviderVPC51C4E3DE",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderVPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "ServiceProviderVPC51C4E3DE",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386",
    "aws:asset:property": "Code"
   }
  },
  "ServiceProviderNLB6BA451AB": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internal",
    "Subnets": [
     {
      "Ref": "ServiceProviderVPCprivatesubnetSubnet1Subnet3BE3EE80"
     },
     {
      "Ref": "ServiceProviderVPCprivatesubnetSubnet2Subnet3125EE01"
     }
    ],
    "Type": "network"
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderNLB/Resource"
   }
  },
  "ServiceProviderNLBnlblistenerFE2952D2": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ServiceProviderNLBTargetGroup1FF51F74"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ServiceProviderNLB6BA451AB"
    },
    "Port": 80,
    "Protocol": "TCP"
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderNLB/nlblistener/Resource"
   }
  },
  "ServiceProviderNLBTargetGroup1FF51F74": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "TCP",
    "TargetType": "instance",
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProviderNLBTargetGroup/Resource"
   }
  },
  "ServiceProvidervpcendpointF57B3B43": {
   "Type": "AWS::EC2::VPCEndpointService",
   "Properties": {
    "AcceptanceRequired": true,
    "NetworkLoadBalancerArns": [
     {
      "Ref": "ServiceProviderNLB6BA451AB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProvidervpcendpoint/ServiceProvidervpcendpoint"
   }
  },
  "ServiceProvidervpcendpointPermissionsFA85581D": {
   "Type": "AWS::EC2::VPCEndpointServicePermissions",
   "Properties": {
    "ServiceId": {
     "Ref": "ServiceProvidervpcendpointF57B3B43"
    },
    "AllowedPrincipals": [
     "arn:aws:iam::746247950449:root"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/ServiceProvidervpcendpoint/Permissions"
   }
  },
  "SecurityGroupforNLB8474E56F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "PostnordProjectServiceProviderEndStack/SecurityGroupforNLB",
    "VpcId": {
     "Ref": "ServiceProviderVPC51C4E3DE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/SecurityGroupforNLB/Resource"
   }
  },
  "SecurityGroupforNLBto00000ALLTRAFFIC3DBA169D": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "SecurityGroupforNLB8474E56F",
      "GroupId"
     ]
    },
    "IpProtocol": "-1",
    "CidrIp": "0.0.0.0/0",
    "Description": "Allow all outbound traffic by default"
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/SecurityGroupforNLB/to 0.0.0.0_0:ALL TRAFFIC"
   }
  },
  "SecurityGroupforNLBfrom0000080372EE84C": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "CidrIp": "0.0.0.0/0",
    "Description": "allow http access to the NLB",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "SecurityGroupforNLB8474E56F",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/SecurityGroupforNLB/from 0.0.0.0_0:80"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/42ST2/CMAzFPwv3kA0O+3NkCKFKE6so4jqlqdcZ2qRKnCKE+t3nlnbdtGnaKc8/P1kvceby/lHOJurkpzo7TgtM5SUhpY+C0esF9Fxe9pUWyzezj5ciDmmBOgmpAWrZqLY2EOxUWsDIR7bw3mpUhNZ8mluxiuL22ChaK4KTOovYYc1yHBwZAsd6MFyT9NWCOOt7CYYEp1yZrLJoKAFXo4be+i8agyvRe87nRQI6OKTz2tlQdbf5E6xyB97/wJHpeCOgUJ5QF1ZlqSqU0Wjymp91A3Sy7vjM/Knj4Noh3+rBg57A9P1B972dcjm/zhDtS9k0YgveBtdeOniy5VjyDn5vxc7WmPF4XhkQf4Wc47b+l0BV6DaytCbDdpWNMDYDefA39exBzu7k7eTgEacuGMIS5PZ6fgD+n+KQZAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "PostnordProjectServiceProviderEndStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "vpcendpointservicename": {
   "Value": {
    "Fn::Join": [
     ".",
     [
      "com.amazonaws.vpce",
      {
       "Ref": "AWS::Region"
      },
      {
       "Ref": "ServiceProvidervpcendpointF57B3B43"
      }
     ]
    ]
   },
   "Export": {
    "Name": "VPC-Endpoint-service-name"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}